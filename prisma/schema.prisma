// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Telegrams {
  chat_id    BigInt   @unique
  first_name String
  last_name  String
  username   String
  created_at DateTime @default(now())
  provider   String   @default("motherhood")
  user_id    Int
  user       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade) // Обратная связь

  @@map("telegrams")
}

model Tracking {
  chat_id    BigInt   @unique
  first_name String?
  last_name  String?
  username   String?
  tracking   Boolean  @default(false)
  answer     Boolean  @default(false)
  created_at DateTime @default(now())

  @@map("tracking")
}

model Chats {
  id            String   @id @default(uuid())
  cause         String
  message       String?
  clients_name  String?
  managers_name String?
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       Int
  created_at    DateTime @default(now())

  @@index([created_at])
  @@map("chats")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String?     @default("default") @db.VarChar(191)
  email      String?     @unique @default("default")
  provider   String?     @default("default")
  oauth_id   String?     @default("default")
  image      String?     @default("default")
  access     Boolean     @default(false)
  created_at DateTime    @default(now())
  Chats      Chats[]
  Telegram   Telegrams[]
  Favorite   Favorite[]
  @@map("users")
}

model Links {
  id          String   @id @default(uuid())
  type        String
  title       String
  description String   @db.Text // Для длинного текста
  descriptionFormat String  @default("plaintext") // "html", "markdown"
  date        String
  link        String   @unique // Добавьте это
  Favorite Favorite[]
}

model Favorite {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  Int
  link     Links  @relation(fields: [link_id], references: [id], onDelete: Cascade)
  link_id  String

  @@unique([user_id, link_id], name: "user_link_unique")
  @@index([user_id])
  @@index([link_id])
}
