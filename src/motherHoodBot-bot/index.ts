import { Context, Telegraf } from "telegraf";
import { config } from "../config/config.js";
import consultationsService from "../services/common-db.js";
import { handlePolicyAgreement } from "../component/handlePolicyAgreement.js";
import { sendKeyboard } from "../component/sendKeyboard.js";

// @ts-ignore
import { Message } from 'telegraf/typings/core/types/typegram';

// ======= –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===========
const token = process.env.NODE_ENV === 'production'
    ? config.MOTHER_BOT_TOKEN
    : config.DEV_MOTHER_BOT_TOKEN;

if (!token) throw new Error('AnswererBot token is not defined!');
const motherHoodBot = new Telegraf(token);

const webTerms = config.URL_TERMS;
const webPrivacy = config.URL_PRIVACY;
const start = `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å –≤ –ß–∞—Ç–±–æ—Ç–µ –∫–∞–Ω–∞–ª–∞ –ï–ª–µ–Ω—ã –ö–æ—Ä–Ω–µ–≤–æ–π`;

// ======= –û—á–µ—Ä–µ–¥—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===========
const pendingMessages: Map<number, string[]> = new Map();

motherHoodBot.start(async (ctx) => {
    try {
        await ctx.replyWithHTML(
            `<b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å ${ctx.message.from.first_name || '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}!</b>\n${start}`
        );

        await ctx.reply("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏", {
            reply_markup: {
                keyboard: [
                    [
                        { text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ" },
                        { text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" }
                    ]
                ],
                resize_keyboard: true,
                one_time_keyboard: false
            }
        });

        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
        await consultationsService.start({
            chat_id: ctx.message.from.id,
            first_name: ctx.message.from.first_name || "default",
            last_name: ctx.message.from.last_name || "default",
            username: ctx.message.from.username || "default",
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        const pending = pendingMessages.get(ctx.message.from.id);
        if (pending?.length) {
            for (const msg of pending) {
                await ctx.reply(msg);
            }
            pendingMessages.delete(ctx.message.from.id);
        }

    } catch (e) {
        console.error("Error in /start command:", e);
    }
});

motherHoodBot.hears('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ', async (ctx) => {
    await handlePolicyAgreement(ctx, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", webTerms);
});

// ======= –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===========
async function safeSendMessage(ctx: Context, userId: number, text: string) {
    try {
        await ctx.telegram.sendMessage(userId, text);
        return true;
    } catch (error: any) {
        if (error.response?.error_code === 403) {
            return false; // –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
        }
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}: ${error.message}`);
        return false;
    }
}
motherHoodBot.command('support', async (ctx) => {
    const supportText = `
üìû –¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ï–ª–µ–Ω—ã:
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
üí¨ Telegram: @MrkDigital  
  `;

    await ctx.reply(supportText, {
        link_preview_options: { is_disabled: true } // –ù–æ–≤—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    });
});
motherHoodBot.command('help', async (ctx) => {
    const supportText = `
üìû –°–ª—É–∂–±–∞ –ø–æ–º–æ—â–∏ –ï–ª–µ–Ω—ã:
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
üí¨ Telegram: @MrkDigital  
  `;

    await ctx.reply(supportText, {
        link_preview_options: { is_disabled: true } // –ù–æ–≤—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    });
});
// ======= –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ===========
motherHoodBot.on('message', async (ctx) => {
    const msg = ctx.message as Message.CommonMessage;

    if (!msg.from) return;

    const userId = msg.from.id;
    const userName = msg.from.first_name || "–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü";
    console.log('‚úâÔ∏è –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);

    if (msg.chat.type === 'supergroup' && msg.reply_to_message?.forward_from_chat) {
        const textForUser = (msg.text === '–†–∞–∑–±–æ—Ä' || msg.text === '—Ä–∞–∑–±–æ—Ä')
            ? `üì¢ –í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n‚úÖ –í —Å–≤—è–∑–∏ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞—è–≤–æ–∫, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –ï–ª–µ–Ω—ã –ö–æ—Ä–Ω–µ–≤–æ–π –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.\nüîπ –î–æ—Å—Ç—É–ø–Ω—ã –ø–ª–∞—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ñ–µ—Ä\nüëâ –•–æ—Ç–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏? –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–∫—É @MrkDigital, –∏ —è –ø—Ä–∏—à–ª—é:\n‚úÖ –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥\n‚úÖ –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å\nüí¨ –û—Ç–≤–µ—á—É –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ!\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ê–ª–µ–∫—Å–µ–π, —Ç–µ—Ö–ª–∏–¥ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä –ï–ª–µ–Ω—ã\n@MrkDigital`
            : `–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –ï–ª–µ–Ω–µ. üå∏\nüì¢ –í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n‚úÖ –í —Å–≤—è–∑–∏ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞—è–≤–æ–∫, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –ï–ª–µ–Ω—ã –ö–æ—Ä–Ω–µ–≤–æ–π –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.\nüîπ –î–æ—Å—Ç—É–ø–Ω—ã –ø–ª–∞—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ñ–µ—Ä\nüëâ –•–æ—Ç–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏? –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–∫—É @MrkDigital, –∏ —è –ø—Ä–∏—à–ª—é:\n‚úÖ –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥\n‚úÖ –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å\nüí¨ –û—Ç–≤–µ—á—É –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ!\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ê–ª–µ–∫—Å–µ–π, —Ç–µ—Ö–ª–∏–¥ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä –ï–ª–µ–Ω—ã\n@MrkDigital`;

        const sent = await safeSendMessage(ctx, userId, textForUser);

        try {
            if (sent) {
                // –û—Ç–≤–µ—Ç –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ
                await ctx.reply(`üì¨ ${userName}, –º—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`, {
                    // @ts-ignore
                    reply_to_message_id: msg.message_id // –ò—Å–ø–æ–ª—å–∑—É–µ–º message_id –Ω–∞–ø—Ä—è–º—É—é
                });
            } else {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
                const botUsername = (await ctx.telegram.getMe()).username;
                const botLink = `https://t.me/${botUsername}?start`;


                await ctx.reply(
                    `${userName}, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ ‚Äî –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç.`,
                    {
                        reply_markup: {
                            inline_keyboard: [[
                                { text: "üîì –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç", url: botLink }
                            ]]
                        },
                        // @ts-ignore
                        reply_to_message_id: msg.message_id // –ò—Å–ø–æ–ª—å–∑—É–µ–º message_id –Ω–∞–ø—Ä—è–º—É—é
                    }
                );

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
                const previous = pendingMessages.get(userId) || [];
                pendingMessages.set(userId, [...previous, textForUser]);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –≤ –≥—Ä—É–ø–ø–µ:', error);
        }
    } else {
        // –ü—Ä—è–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É
        await safeSendMessage(ctx, userId, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!\n–ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏');
    }
});


export { motherHoodBot };
